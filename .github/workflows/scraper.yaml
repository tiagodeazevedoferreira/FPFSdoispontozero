name: Futsal Data Scraper

on:
  schedule:
    - cron: '0 0 * * *'  # Roda todo dia à meia-noite (UTC)
  workflow_dispatch:  # Permite executar manualmente

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium pandas webdriver-manager requests google-auth firebase-admin
    - name: Create credentials.json
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      run: |
        # Verificar se o segredo está vazio
        if [ -z "$GOOGLE_CREDENTIALS" ]; then
          echo "Erro: GOOGLE_CREDENTIALS está vazio"
          exit 1
        fi
        # Escrever o arquivo temporário com printf
        printf "%s" "$GOOGLE_CREDENTIALS" > credentials.json.temp
        # Exibir o tamanho e conteúdo (mascarado) do arquivo temporário para depuração
        echo "Tamanho do arquivo credentials.json.temp:"
        ls -l credentials.json.temp
        echo "Conteúdo do credentials.json.temp (mascarado):"
        cat credentials.json.temp || echo "Erro: arquivo credentials.json.temp vazio ou não criado"
        # Usar Python para limpar e reescrever o JSON
        python -c "import json; data = open('credentials.json.temp').read(); print('Conteúdo lido:', data); creds = json.loads(data); json.dump(creds, open('credentials.json', 'w'), indent=2)"
        rm credentials.json.temp
        # Depuração do arquivo final
        echo "Tamanho do arquivo credentials.json:"
        ls -l credentials.json
        echo "Conteúdo do credentials.json (mascarado):"
        head -n 5 credentials.json || echo "Erro: arquivo credentials.json vazio ou não criado"
    - name: Run scraper
      run: python scraper.py
